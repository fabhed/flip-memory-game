To implement this, we will need the following files:

1. `server.js`: This is the entry point of our application. It will set up a Node.js server that serves our HTML5 game.

2. `package.json`: This file will contain the metadata of our project, including the dependencies.

3. `index.html`: This is the main HTML file that will be served by our Node.js server. It will contain the structure of our memory game.

4. `styles.css`: This file will contain all the CSS styles for our memory game.

5. `script.js`: This file will contain all the JavaScript logic for our memory game.

Let's start with the `server.js` file:

server.js
```javascript
const express = require('express');
const path = require('path');

const app = express();
const port = 8000;

app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.listen(port, () => {
  console.log(`Server listening on port ${port}`);
});
```

Next, we will create the `package.json` file:

package.json
```json
{
  "name": "memory-game",
  "version": "1.0.0",
  "description": "A memory game where 20 words are written out on the backside on the card that you can click to flip.",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.17.1"
  }
}
```

Now, let's create the `index.html` file:

index.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Memory Game</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div id="game-board"></div>
  <script src="script.js"></script>
</body>
</html>
```

Next, we will create the `styles.css` file:

styles.css
```css
.card {
  width: 100px;
  height: 100px;
  border: 1px solid #000;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card.flip {
  transform: rotateY(180deg);
}

.card .front,
.card .back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.card .front {
  background-color: #f00;
}

.card .back {
  background-color: #0f0;
  transform: rotateY(180deg);
}
```

Finally, we will create the `script.js` file:

script.js
```javascript
const words = ['word1', 'word2', 'word3', 'word4', 'word5', 'word6', 'word7', 'word8', 'word9', 'word10', 'word11', 'word12', 'word13', 'word14', 'word15', 'word16', 'word17', 'word18', 'word19', 'word20'];
const gameBoard = document.getElementById('game-board');

words.forEach(word => {
  const card = document.createElement('div');
  card.classList.add('card');

  const front = document.createElement('div');
  front.classList.add('front');
  front.textContent = 'Click to flip';

  const back = document.createElement('div');
  back.classList.add('back');
  back.textContent = word;

  card.appendChild(front);
  card.appendChild(back);

  card.addEventListener('click', () => {
    card.classList.toggle('flip');
  });

  gameBoard.appendChild(card);
});
```

To run the application, you need to install the dependencies first by running `npm install` in the terminal. After that, you can start the server by running `npm start`. The game will be available at `http://localhost:8000`.